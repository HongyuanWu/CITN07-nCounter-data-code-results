layout(matrix(1:2, 1), widths = c(4, 6))
par(mar = c(7,4.5,2,0))
par(xpd = FALSE)
# genes to highlight: FDR < 0.05
top = f2<0.05
show.text = p2 < 10^-4  #f2<0.05
plot(e2, -log10(p2), pch=16, cex = 0.5,
#     col = c(fadecols("firebrick", 0.5), fadecols("darkblue", 0.5), "white", "white")[
#       (e2 > 0) + 2 * (e2 < 0) + 2 * show.text],
col = c(rgb(0,0,0,.5), "white")[1 + show.text],
#xlab=paste0("  \n\nlog2 fold-change\nC1D08 vs. Pre-treatment"),
xlab="log2 fold-change",
ylab = "-log10(p-value)",cex.lab=1.2)
#main="cohort 1: C1D08 vs. baseline",ylab="-log10(p-value)",cex.lab=1.5)
# text for top 50:
text(e2[show.text], -log10(p2[show.text]), colnames(norm)[show.text], cex=.65,
col=c("darkblue","firebrick")[1+(e2[show.text]>0)])  #aquamarine4
# draw lines for FDR cutoffs:
fdr.cutoff = 0.05 #c(0.5,0.1,0.05)
abline(h=-log10(max(p2[f2<fdr.cutoff])),lty=2)
abline(h=-log10(max(p2[f2<0.5])),lty=3)
legend("bottomright",lty=2:3,legend = paste0("FDR = ",c(fdr.cutoff, 0.5)), bg = "white")
#legend("bottomright",lty=1:length(fdr.cutoffs),legend = paste0("FDR = ",fdr.cutoffs))
## now run gene set analysis:
genesets = gannot
# summary stat for each gene set: mean -log10(pval)
genesetscore = c()
for(geneset in colnames(genesets))
{
tempgenes = intersect(rownames(genesets)[genesets[,geneset]==1],colnames(norm))
genesetscore[geneset] = mean(-log10(p2[tempgenes]))
}
# identify the top 5 gene sets:
#top5 = names(genesetscore)[order(genesetscore,decreasing = T)[1:30]]
## selected gene set scores based on biological interest:
top5 = c("MHC2","APM","immunoproteasome","TLR","Cytokines","Myleoid.inflam","IFN.downstream","myleoid","lymphoid","NK.Cell.Functions","T.Cell.Functions")
top5.altnames = top5; names(top5.altnames) = top5
top5.altnames["MHC2"] = "MHC2" # "Antigen processing by MHC2"
top5.altnames["APM"] = "MHC1" # "Antigen processing by MHC1"
top5.altnames["immunoproteasome"] = "Proteasome" # "Immunoproteasome"
top5.altnames["myleoid"] = "Myeloid" # "Myeloid compartment"
top5.altnames["lymphoid"] = "Lymphoid" # "Lymphoid compartment"
top5.altnames["TLR"] = "TLR" # "Toll Like Receptors"
#top5.altnames["IR.Innate"] = "MHC1" # "Innate immunity"
top5.altnames["Cytokines"] = "Cytokine" # "Cytokines"
top5.altnames["Myleoid.inflam"] = "Myeloid inflam" # "Myeloid inflammatory"
top5.altnames["IFN.downstream"] = "IFN" # "Interferon downstream"
top5.altnames["NK.Cell.Functions"] = "NK cell" # "NK cell functions"
top5.altnames["T.Cell.Functions"] = "T cell" # "T cell functions"
# now plot the gene sets' -log10 pvals:
par(mar = c(7,1,2,1))
plot(c(0,0),col=0,xlim=c(0.5,length(top5)+0.5),ylim=range(-log10(p2)),xaxt="n",xlab="", yaxt="n", ylab = "")#,ylab="-log10(p-value)", cex.lab = 1.2)
bp = 1:length(top5)
#bp = barplot(genesetscore[top5],col=rgb(0,0,0,.1),ylim=ylim,xaxt="n",xlab="",ylab="-log10(p-value)",border = F,main="Gene set results")
axis(1,at = bp,labels = top5.altnames[top5],las=2, cex.axis = 1.6)
abline(h=-log10(max(p2[f2<fdr.cutoff])),lty=2)
abline(h=-log10(max(p2[f2<0.5])),lty=3)
abline(v = bp,col="grey80")
for(i in 1:length(top5))
{
geneset = top5[i]
rect(bp[i]-.4,0,bp[i]+.4,genesetscore[geneset],col=rgb(0,0,0,.5),border = F)
tempgenes = intersect(rownames(genesets)[genesets[,geneset]==1],names(p2))
text(rep(bp[i],length(tempgenes)),-log10(p2[tempgenes]),tempgenes,cex=0.65,
col = c("darkblue","firebrick")[1+(e2[tempgenes]>0)])
#col = c(rgb(0,0,1,0.7),rgb(1,0,0,0.7))[1+(e2[tempgenes]>0)])
}
dev.off()
plot(e2, -log10(p2), pch=16, cex = 0.5, cex.lab = 1.5,
#     col = c(fadecols("firebrick", 0.5), fadecols("darkblue", 0.5), "white", "white")[
#       (e2 > 0) + 2 * (e2 < 0) + 2 * show.text],
col = c(rgb(0,0,0,.5), "white")[1 + show.text],
#xlab=paste0("  \n\nlog2 fold-change\nC1D08 vs. Pre-treatment"),
xlab="log2 fold-change",
ylab = "-log10(p-value)",cex.lab=1.2)
pdf("C1D08 volcano plot.pdf", width = 10)
#par(mfrow = c(1,2))
layout(matrix(1:2, 1), widths = c(4, 6))
par(mar = c(10,4.5,2,0))
par(xpd = FALSE)
# genes to highlight: FDR < 0.05
top = f2<0.05
show.text = p2 < 10^-4  #f2<0.05
plot(e2, -log10(p2), pch=16, cex = 0.5, cex.lab = 1.5,
#     col = c(fadecols("firebrick", 0.5), fadecols("darkblue", 0.5), "white", "white")[
#       (e2 > 0) + 2 * (e2 < 0) + 2 * show.text],
col = c(rgb(0,0,0,.5), "white")[1 + show.text],
#xlab=paste0("  \n\nlog2 fold-change\nC1D08 vs. Pre-treatment"),
xlab="log2 fold-change",
ylab = "-log10(p-value)",cex.lab=1.2)
#main="cohort 1: C1D08 vs. baseline",ylab="-log10(p-value)",cex.lab=1.5)
# text for top 50:
text(e2[show.text], -log10(p2[show.text]), colnames(norm)[show.text], cex=.65,
col=c("darkblue","firebrick")[1+(e2[show.text]>0)])  #aquamarine4
# draw lines for FDR cutoffs:
fdr.cutoff = 0.05 #c(0.5,0.1,0.05)
abline(h=-log10(max(p2[f2<fdr.cutoff])),lty=2)
abline(h=-log10(max(p2[f2<0.5])),lty=3)
legend("bottomright",lty=2:3,legend = paste0("FDR = ",c(fdr.cutoff, 0.5)), bg = "white")
#legend("bottomright",lty=1:length(fdr.cutoffs),legend = paste0("FDR = ",fdr.cutoffs))
## now run gene set analysis:
genesets = gannot
# summary stat for each gene set: mean -log10(pval)
genesetscore = c()
for(geneset in colnames(genesets))
{
tempgenes = intersect(rownames(genesets)[genesets[,geneset]==1],colnames(norm))
genesetscore[geneset] = mean(-log10(p2[tempgenes]))
}
# identify the top 5 gene sets:
#top5 = names(genesetscore)[order(genesetscore,decreasing = T)[1:30]]
## selected gene set scores based on biological interest:
top5 = c("MHC2","APM","immunoproteasome","TLR","Cytokines","Myleoid.inflam","IFN.downstream","myleoid","lymphoid","NK.Cell.Functions","T.Cell.Functions")
top5.altnames = top5; names(top5.altnames) = top5
top5.altnames["MHC2"] = "MHC2" # "Antigen processing by MHC2"
top5.altnames["APM"] = "MHC1" # "Antigen processing by MHC1"
top5.altnames["immunoproteasome"] = "Proteasome" # "Immunoproteasome"
top5.altnames["myleoid"] = "Myeloid" # "Myeloid compartment"
top5.altnames["lymphoid"] = "Lymphoid" # "Lymphoid compartment"
top5.altnames["TLR"] = "TLR" # "Toll Like Receptors"
#top5.altnames["IR.Innate"] = "MHC1" # "Innate immunity"
top5.altnames["Cytokines"] = "Cytokine" # "Cytokines"
top5.altnames["Myleoid.inflam"] = "Myeloid inflam" # "Myeloid inflammatory"
top5.altnames["IFN.downstream"] = "IFN" # "Interferon downstream"
top5.altnames["NK.Cell.Functions"] = "NK cell" # "NK cell functions"
top5.altnames["T.Cell.Functions"] = "T cell" # "T cell functions"
# now plot the gene sets' -log10 pvals:
par(mar = c(10,1,2,1))
plot(c(0,0),col=0,xlim=c(0.5,length(top5)+0.5),ylim=range(-log10(p2)),xaxt="n",xlab="", yaxt="n", ylab = "")#,ylab="-log10(p-value)", cex.lab = 1.2)
bp = 1:length(top5)
#bp = barplot(genesetscore[top5],col=rgb(0,0,0,.1),ylim=ylim,xaxt="n",xlab="",ylab="-log10(p-value)",border = F,main="Gene set results")
axis(1,at = bp,labels = top5.altnames[top5],las=2, cex.axis = 1.6)
abline(h=-log10(max(p2[f2<fdr.cutoff])),lty=2)
abline(h=-log10(max(p2[f2<0.5])),lty=3)
abline(v = bp,col="grey80")
for(i in 1:length(top5))
{
geneset = top5[i]
rect(bp[i]-.4,0,bp[i]+.4,genesetscore[geneset],col=rgb(0,0,0,.5),border = F)
tempgenes = intersect(rownames(genesets)[genesets[,geneset]==1],names(p2))
text(rep(bp[i],length(tempgenes)),-log10(p2[tempgenes]),tempgenes,cex=0.65,
col = c("darkblue","firebrick")[1+(e2[tempgenes]>0)])
#col = c(rgb(0,0,1,0.7),rgb(1,0,0,0.7))[1+(e2[tempgenes]>0)])
}
dev.off()
plot(e2, -log10(p2), pch=16, cex = 0.5, cex.lab = 2,
#     col = c(fadecols("firebrick", 0.5), fadecols("darkblue", 0.5), "white", "white")[
#       (e2 > 0) + 2 * (e2 < 0) + 2 * show.text],
col = c(rgb(0,0,0,.5), "white")[1 + show.text],
#xlab=paste0("  \n\nlog2 fold-change\nC1D08 vs. Pre-treatment"),
xlab="log2 fold-change",
ylab = "-log10(p-value)",cex.lab=1.2)
plot(e2, -log10(p2), pch=16, cex = 0.5, cex.axis = 2,
#     col = c(fadecols("firebrick", 0.5), fadecols("darkblue", 0.5), "white", "white")[
#       (e2 > 0) + 2 * (e2 < 0) + 2 * show.text],
col = c(rgb(0,0,0,.5), "white")[1 + show.text],
#xlab=paste0("  \n\nlog2 fold-change\nC1D08 vs. Pre-treatment"),
xlab="log2 fold-change",
ylab = "-log10(p-value)",cex.lab=1.2)
plot(e2, -log10(p2), pch=16, cex = 0.5, cex.labels = 2,
#     col = c(fadecols("firebrick", 0.5), fadecols("darkblue", 0.5), "white", "white")[
#       (e2 > 0) + 2 * (e2 < 0) + 2 * show.text],
col = c(rgb(0,0,0,.5), "white")[1 + show.text],
#xlab=paste0("  \n\nlog2 fold-change\nC1D08 vs. Pre-treatment"),
xlab="log2 fold-change",
ylab = "-log10(p-value)",cex.lab=1.2)
plot(e2, -log10(p2), pch=16, cex = 0.5, cex.lab = 2,
#     col = c(fadecols("firebrick", 0.5), fadecols("darkblue", 0.5), "white", "white")[
#       (e2 > 0) + 2 * (e2 < 0) + 2 * show.text],
col = c(rgb(0,0,0,.5), "white")[1 + show.text],
#xlab=paste0("  \n\nlog2 fold-change\nC1D08 vs. Pre-treatment"),
xlab="log2 fold-change",
ylab = "-log10(p-value)",cex.lab=1.2)
warnbings()
warnings()
plot(e2, -log10(p2), pch=16, cex = 0.5, cex.lab = 2,
#     col = c(fadecols("firebrick", 0.5), fadecols("darkblue", 0.5), "white", "white")[
#       (e2 > 0) + 2 * (e2 < 0) + 2 * show.text],
col = c(rgb(0,0,0,.5), "white")[1 + show.text],
#xlab=paste0("  \n\nlog2 fold-change\nC1D08 vs. Pre-treatment"),
xlab="log2 fold-change",
ylab = "-log10(p-value)",cex.lab=1.2)
plot(e2, -log10(p2), pch=16, cex = 0.5, cex.lab = 1,
#     col = c(fadecols("firebrick", 0.5), fadecols("darkblue", 0.5), "white", "white")[
#       (e2 > 0) + 2 * (e2 < 0) + 2 * show.text],
col = c(rgb(0,0,0,.5), "white")[1 + show.text],
#xlab=paste0("  \n\nlog2 fold-change\nC1D08 vs. Pre-treatment"),
xlab="log2 fold-change",
ylab = "-log10(p-value)",cex.lab=1.2)
plot(e2, -log10(p2), pch=16, cex = 0.5,
#     col = c(fadecols("firebrick", 0.5), fadecols("darkblue", 0.5), "white", "white")[
#       (e2 > 0) + 2 * (e2 < 0) + 2 * show.text],
col = c(rgb(0,0,0,.5), "white")[1 + show.text],
#xlab=paste0("  \n\nlog2 fold-change\nC1D08 vs. Pre-treatment"),
xlab = "log2 fold-change",
ylab = "-log10(p-value)", cex.lab = 1.7)
pdf("C1D08 volcano plot.pdf", width = 10)
#par(mfrow = c(1,2))
layout(matrix(1:2, 1), widths = c(4, 6))
par(mar = c(10,4.5,2,0))
par(xpd = FALSE)
# genes to highlight: FDR < 0.05
top = f2<0.05
show.text = p2 < 10^-4  #f2<0.05
plot(e2, -log10(p2), pch=16, cex = 0.5,
#     col = c(fadecols("firebrick", 0.5), fadecols("darkblue", 0.5), "white", "white")[
#       (e2 > 0) + 2 * (e2 < 0) + 2 * show.text],
col = c(rgb(0,0,0,.5), "white")[1 + show.text],
#xlab=paste0("  \n\nlog2 fold-change\nC1D08 vs. Pre-treatment"),
xlab = "log2 fold-change",
ylab = "-log10(p-value)", cex.lab = 1.7)
#main="cohort 1: C1D08 vs. baseline",ylab="-log10(p-value)",cex.lab=1.5)
# text for top 50:
text(e2[show.text], -log10(p2[show.text]), colnames(norm)[show.text], cex=.65,
col=c("darkblue","firebrick")[1+(e2[show.text]>0)])  #aquamarine4
# draw lines for FDR cutoffs:
fdr.cutoff = 0.05 #c(0.5,0.1,0.05)
abline(h=-log10(max(p2[f2<fdr.cutoff])),lty=2)
abline(h=-log10(max(p2[f2<0.5])),lty=3)
legend("bottomright",lty=2:3,legend = paste0("FDR = ",c(fdr.cutoff, 0.5)), bg = "white")
#legend("bottomright",lty=1:length(fdr.cutoffs),legend = paste0("FDR = ",fdr.cutoffs))
## now run gene set analysis:
genesets = gannot
# summary stat for each gene set: mean -log10(pval)
genesetscore = c()
for(geneset in colnames(genesets))
{
tempgenes = intersect(rownames(genesets)[genesets[,geneset]==1],colnames(norm))
genesetscore[geneset] = mean(-log10(p2[tempgenes]))
}
# identify the top 5 gene sets:
#top5 = names(genesetscore)[order(genesetscore,decreasing = T)[1:30]]
## selected gene set scores based on biological interest:
top5 = c("MHC2","APM","immunoproteasome","TLR","Cytokines","Myleoid.inflam","IFN.downstream","myleoid","lymphoid","NK.Cell.Functions","T.Cell.Functions")
top5.altnames = top5; names(top5.altnames) = top5
top5.altnames["MHC2"] = "MHC2" # "Antigen processing by MHC2"
top5.altnames["APM"] = "MHC1" # "Antigen processing by MHC1"
top5.altnames["immunoproteasome"] = "Proteasome" # "Immunoproteasome"
top5.altnames["myleoid"] = "Myeloid" # "Myeloid compartment"
top5.altnames["lymphoid"] = "Lymphoid" # "Lymphoid compartment"
top5.altnames["TLR"] = "TLR" # "Toll Like Receptors"
#top5.altnames["IR.Innate"] = "MHC1" # "Innate immunity"
top5.altnames["Cytokines"] = "Cytokine" # "Cytokines"
top5.altnames["Myleoid.inflam"] = "Myeloid inflam" # "Myeloid inflammatory"
top5.altnames["IFN.downstream"] = "IFN" # "Interferon downstream"
top5.altnames["NK.Cell.Functions"] = "NK cell" # "NK cell functions"
top5.altnames["T.Cell.Functions"] = "T cell" # "T cell functions"
# now plot the gene sets' -log10 pvals:
par(mar = c(10,1,2,1))
plot(c(0,0),col=0,xlim=c(0.5,length(top5)+0.5),ylim=range(-log10(p2)),xaxt="n",xlab="", yaxt="n", ylab = "")#,ylab="-log10(p-value)", cex.lab = 1.2)
bp = 1:length(top5)
#bp = barplot(genesetscore[top5],col=rgb(0,0,0,.1),ylim=ylim,xaxt="n",xlab="",ylab="-log10(p-value)",border = F,main="Gene set results")
axis(1,at = bp,labels = top5.altnames[top5],las=2, cex.axis = 1.6)
abline(h=-log10(max(p2[f2<fdr.cutoff])),lty=2)
abline(h=-log10(max(p2[f2<0.5])),lty=3)
abline(v = bp,col="grey80")
for(i in 1:length(top5))
{
geneset = top5[i]
rect(bp[i]-.4,0,bp[i]+.4,genesetscore[geneset],col=rgb(0,0,0,.5),border = F)
tempgenes = intersect(rownames(genesets)[genesets[,geneset]==1],names(p2))
text(rep(bp[i],length(tempgenes)),-log10(p2[tempgenes]),tempgenes,cex=0.65,
col = c("darkblue","firebrick")[1+(e2[tempgenes]>0)])
#col = c(rgb(0,0,1,0.7),rgb(1,0,0,0.7))[1+(e2[tempgenes]>0)])
}
dev.off()
pdf("C1D08 volcano plot.pdf", width = 11.5)
#par(mfrow = c(1,2))
layout(matrix(1:2, 1), widths = c(4, 6))
par(mar = c(10,4.5,2,0))
par(xpd = FALSE)
# genes to highlight: FDR < 0.05
top = f2<0.05
show.text = p2 < 10^-4  #f2<0.05
plot(e2, -log10(p2), pch=16, cex = 0.5,
#     col = c(fadecols("firebrick", 0.5), fadecols("darkblue", 0.5), "white", "white")[
#       (e2 > 0) + 2 * (e2 < 0) + 2 * show.text],
col = c(rgb(0,0,0,.5), "white")[1 + show.text],
#xlab=paste0("  \n\nlog2 fold-change\nC1D08 vs. Pre-treatment"),
xlab = "log2 fold-change",
ylab = "-log10(p-value)", cex.lab = 1.7)
#main="cohort 1: C1D08 vs. baseline",ylab="-log10(p-value)",cex.lab=1.5)
# text for top 50:
text(e2[show.text], -log10(p2[show.text]), colnames(norm)[show.text], cex=.65,
col=c("darkblue","firebrick")[1+(e2[show.text]>0)])  #aquamarine4
# draw lines for FDR cutoffs:
fdr.cutoff = 0.05 #c(0.5,0.1,0.05)
abline(h=-log10(max(p2[f2<fdr.cutoff])),lty=2)
abline(h=-log10(max(p2[f2<0.5])),lty=3)
legend("bottomright",lty=2:3,legend = paste0("FDR = ",c(fdr.cutoff, 0.5)), bg = "white")
#legend("bottomright",lty=1:length(fdr.cutoffs),legend = paste0("FDR = ",fdr.cutoffs))
## now run gene set analysis:
genesets = gannot
# summary stat for each gene set: mean -log10(pval)
genesetscore = c()
for(geneset in colnames(genesets))
{
tempgenes = intersect(rownames(genesets)[genesets[,geneset]==1],colnames(norm))
genesetscore[geneset] = mean(-log10(p2[tempgenes]))
}
# identify the top 5 gene sets:
#top5 = names(genesetscore)[order(genesetscore,decreasing = T)[1:30]]
## selected gene set scores based on biological interest:
top5 = c("MHC2","APM","immunoproteasome","TLR","Cytokines","Myleoid.inflam","IFN.downstream","myleoid","lymphoid","NK.Cell.Functions","T.Cell.Functions")
top5.altnames = top5; names(top5.altnames) = top5
top5.altnames["MHC2"] = "MHC2" # "Antigen processing by MHC2"
top5.altnames["APM"] = "MHC1" # "Antigen processing by MHC1"
top5.altnames["immunoproteasome"] = "Proteasome" # "Immunoproteasome"
top5.altnames["myleoid"] = "Myeloid" # "Myeloid compartment"
top5.altnames["lymphoid"] = "Lymphoid" # "Lymphoid compartment"
top5.altnames["TLR"] = "TLR" # "Toll Like Receptors"
#top5.altnames["IR.Innate"] = "MHC1" # "Innate immunity"
top5.altnames["Cytokines"] = "Cytokine" # "Cytokines"
top5.altnames["Myleoid.inflam"] = "Myeloid inflam" # "Myeloid inflammatory"
top5.altnames["IFN.downstream"] = "IFN" # "Interferon downstream"
top5.altnames["NK.Cell.Functions"] = "NK cell" # "NK cell functions"
top5.altnames["T.Cell.Functions"] = "T cell" # "T cell functions"
# now plot the gene sets' -log10 pvals:
par(mar = c(10,1,2,1))
plot(c(0,0),col=0,xlim=c(0.5,length(top5)+0.5),ylim=range(-log10(p2)),xaxt="n",xlab="", yaxt="n", ylab = "")#,ylab="-log10(p-value)", cex.lab = 1.2)
bp = 1:length(top5)
#bp = barplot(genesetscore[top5],col=rgb(0,0,0,.1),ylim=ylim,xaxt="n",xlab="",ylab="-log10(p-value)",border = F,main="Gene set results")
axis(1,at = bp,labels = top5.altnames[top5],las=2, cex.axis = 1.6)
abline(h=-log10(max(p2[f2<fdr.cutoff])),lty=2)
abline(h=-log10(max(p2[f2<0.5])),lty=3)
abline(v = bp,col="grey80")
for(i in 1:length(top5))
{
geneset = top5[i]
rect(bp[i]-.4,0,bp[i]+.4,genesetscore[geneset],col=rgb(0,0,0,.5),border = F)
tempgenes = intersect(rownames(genesets)[genesets[,geneset]==1],names(p2))
text(rep(bp[i],length(tempgenes)),-log10(p2[tempgenes]),tempgenes,cex=0.65,
col = c("darkblue","firebrick")[1+(e2[tempgenes]>0)])
#col = c(rgb(0,0,1,0.7),rgb(1,0,0,0.7))[1+(e2[tempgenes]>0)])
}
dev.off()
pdf("C1D08 volcano plot.pdf", width = 12.5)
#par(mfrow = c(1,2))
layout(matrix(1:2, 1), widths = c(4.8, 6))
par(mar = c(10,4.5,2,0))
par(xpd = FALSE)
# genes to highlight: FDR < 0.05
top = f2<0.05
show.text = p2 < 10^-4  #f2<0.05
plot(e2, -log10(p2), pch=16, cex = 0.5,
#     col = c(fadecols("firebrick", 0.5), fadecols("darkblue", 0.5), "white", "white")[
#       (e2 > 0) + 2 * (e2 < 0) + 2 * show.text],
col = c(rgb(0,0,0,.5), "white")[1 + show.text],
#xlab=paste0("  \n\nlog2 fold-change\nC1D08 vs. Pre-treatment"),
xlab = "log2 fold-change",
ylab = "-log10(p-value)", cex.lab = 1.7)
#main="cohort 1: C1D08 vs. baseline",ylab="-log10(p-value)",cex.lab=1.5)
# text for top 50:
text(e2[show.text], -log10(p2[show.text]), colnames(norm)[show.text], cex=.65,
col=c("darkblue","firebrick")[1+(e2[show.text]>0)])  #aquamarine4
# draw lines for FDR cutoffs:
fdr.cutoff = 0.05 #c(0.5,0.1,0.05)
abline(h=-log10(max(p2[f2<fdr.cutoff])),lty=2)
abline(h=-log10(max(p2[f2<0.5])),lty=3)
legend("bottomright",lty=2:3,legend = paste0("FDR = ",c(fdr.cutoff, 0.5)), bg = "white")
#legend("bottomright",lty=1:length(fdr.cutoffs),legend = paste0("FDR = ",fdr.cutoffs))
## now run gene set analysis:
genesets = gannot
# summary stat for each gene set: mean -log10(pval)
genesetscore = c()
for(geneset in colnames(genesets))
{
tempgenes = intersect(rownames(genesets)[genesets[,geneset]==1],colnames(norm))
genesetscore[geneset] = mean(-log10(p2[tempgenes]))
}
# identify the top 5 gene sets:
#top5 = names(genesetscore)[order(genesetscore,decreasing = T)[1:30]]
## selected gene set scores based on biological interest:
top5 = c("MHC2","APM","immunoproteasome","TLR","Cytokines","Myleoid.inflam","IFN.downstream","myleoid","lymphoid","NK.Cell.Functions","T.Cell.Functions")
top5.altnames = top5; names(top5.altnames) = top5
top5.altnames["MHC2"] = "MHC2" # "Antigen processing by MHC2"
top5.altnames["APM"] = "MHC1" # "Antigen processing by MHC1"
top5.altnames["immunoproteasome"] = "Proteasome" # "Immunoproteasome"
top5.altnames["myleoid"] = "Myeloid" # "Myeloid compartment"
top5.altnames["lymphoid"] = "Lymphoid" # "Lymphoid compartment"
top5.altnames["TLR"] = "TLR" # "Toll Like Receptors"
#top5.altnames["IR.Innate"] = "MHC1" # "Innate immunity"
top5.altnames["Cytokines"] = "Cytokine" # "Cytokines"
top5.altnames["Myleoid.inflam"] = "Myeloid inflam" # "Myeloid inflammatory"
top5.altnames["IFN.downstream"] = "IFN" # "Interferon downstream"
top5.altnames["NK.Cell.Functions"] = "NK cell" # "NK cell functions"
top5.altnames["T.Cell.Functions"] = "T cell" # "T cell functions"
# now plot the gene sets' -log10 pvals:
par(mar = c(10,1,2,1))
plot(c(0,0),col=0,xlim=c(0.5,length(top5)+0.5),ylim=range(-log10(p2)),xaxt="n",xlab="", yaxt="n", ylab = "")#,ylab="-log10(p-value)", cex.lab = 1.2)
bp = 1:length(top5)
#bp = barplot(genesetscore[top5],col=rgb(0,0,0,.1),ylim=ylim,xaxt="n",xlab="",ylab="-log10(p-value)",border = F,main="Gene set results")
axis(1,at = bp,labels = top5.altnames[top5],las=2, cex.axis = 1.6)
abline(h=-log10(max(p2[f2<fdr.cutoff])),lty=2)
abline(h=-log10(max(p2[f2<0.5])),lty=3)
abline(v = bp,col="grey80")
for(i in 1:length(top5))
{
geneset = top5[i]
rect(bp[i]-.4,0,bp[i]+.4,genesetscore[geneset],col=rgb(0,0,0,.5),border = F)
tempgenes = intersect(rownames(genesets)[genesets[,geneset]==1],names(p2))
text(rep(bp[i],length(tempgenes)),-log10(p2[tempgenes]),tempgenes,cex=0.65,
col = c("darkblue","firebrick")[1+(e2[tempgenes]>0)])
#col = c(rgb(0,0,1,0.7),rgb(1,0,0,0.7))[1+(e2[tempgenes]>0)])
}
dev.off()
#### heatmap of cohort 1 DE results:
# data to show: estimated fold-changes, but only where fdr< 0.5
mat = e*(p<0.05)
#mat = cbind(0, mat)
#colnames(mat)[1] = "Pre-tx"
mat = mat[rowSums(abs(mat))>0, ]
clust = hclust(dist(mat))
pdf("DE heatmaps sideways.pdf", height = 3, width = 6, onefile = F)
#pheatmap(mat[order(mat[,"C1D08"]), ], cluster_cols = F, cluster_rows = F,
pheatmap(t(mat[as.character(clust$labels[clust$order]), ]), cluster_cols = F, cluster_rows = F,
color = colorRampPalette(c("blue","white","red"))(101),
breaks = seq(-max(abs(mat)),max(abs(mat)),length.out = 100),
show_colnames = F, main = "Mean log2 fold-changes from baseline, cohort 1")
dev.off()
pdf("DE heatmaps.pdf", height = 8, width = 4, onefile = F)
pheatmap(mat[as.character(clust$labels[clust$order]), ], cluster_cols = F, cluster_rows = F,
color = colorRampPalette(c("blue","white","red"))(101),
breaks = seq(-max(abs(mat)),max(abs(mat)),length.out = 100),
show_rownames = F) #, main = "Mean log2 fold-changes from baseline, cohort 1")
#gannot.show = c("MHC2","myleoid","lymphoid")
#pheatmap(gannot[clust$labels[clust$order], gannot.show], cluster_cols = F, cluster_rows = F,
#         show_rownames = F, col = c("white","darkblue"))
dev.off()
## plot cell types over time
pdf("manuscript - cells over time v2.pdf", width=9, height = 5)
par(mar = c(6,4.5,.5,1))
layout(matrix(1:3, 1, 3), width = c(4.5,4,2.7))
plot(0,0,xlim=c(1,sum(inc1)),ylim=range(meandeltas[,cells]), xaxt="n",xlab="",
ylab="Mean log2 fold-change from baseline",main="", cex.lab = 1.8)
abline(h=0,col = "grey20", lty = 3, lwd = 2)
axis(1,1:sum(inc1),timepoints,las=2, cex.axis = 1.5)
for(cell in cells)
{
lines(1:sum(inc1),meandeltas[inc1,cell],col=cellcols[cell],lwd=2)
#text(sum(inc1)+0.5,meandeltas[max(which(inc1)),cell],cell,col=cellcols[cell],cex=1.25)
# points for changes sig at p=0.05:
is.sig = (meandeltas[(inc1),cell] - 2*sedeltas[(inc1),cell] > 0)|(meandeltas[(inc1),cell] + 2*sedeltas[(inc1),cell] < 0)
points((1:sum(inc1))[is.sig],meandeltas[which(inc1)[is.sig],cell],col=cellcols[cell],pch=16,cex=1.5)
}
legend("top", legend = "Cohort 1   ", text.col = "orange", cex = 3, bty = "n")
par(mar = c(6,0,.5,1))
plot(0,0,xlim=c(1,sum(inc2)),ylim=range(meandeltas[,cells]),xaxt="n",xlab="",
ylab="",main="", cex.lab = 1.5, yaxt = "n")
abline(h=0,col = "grey20", lty = 3, lwd = 2)
axis(1,1:sum(inc2),setdiff(timepoints, "C1D01"),las=2, cex.axis = 1.5)
for(cell in cells)
{
lines(1:sum(inc2),meandeltas[inc2,cell],col=cellcols[cell],lwd=2)
#text(sum(inc2)+0.5,meandeltas[max(which(inc2)),cell],cell,col=cellcols[cell],cex=1.25)
# points for changes sig at p=0.05:
is.sig = (meandeltas[(inc2),cell] - 2*sedeltas[(inc2),cell] > 0)|(meandeltas[(inc2),cell] + 2*sedeltas[(inc2),cell] < 0)
points((1:sum(inc2))[is.sig],meandeltas[which(inc2)[is.sig],cell],col=cellcols[cell],pch=16,cex=1.5)
}
legend("top", legend = "Cohort 2   ", text.col = "cornflowerblue", cex = 3, bty = "n")
par(mar = c(5.6,0,0,0))
frame()
o.legend = order(meandeltas[3,names(cellcols)], decreasing = T)
legend("center", col = c("black", "black", NA, cellcols[o.legend]),
legend = c("p > 0.05", "p < 0.05", "", names(cellcols)[o.legend]),
lty = 1, pch = c(NA, 16, NA, rep(NA, length(o.legend))), lwd = 3, bty = "n", cex = 1.5)
dev.off()
pheatmap(mat[as.character(clust$labels[clust$order]), ], cluster_cols = F, cluster_rows = F,
color = colorRampPalette(c("blue","white","red"))(101),
breaks = seq(-max(abs(mat)),max(abs(mat)),length.out = 100),
show_rownames = F) #, main = "Mean log2 fold-changes from baseline, cohort 1")
dev.off()
pheatmap(mat[as.character(clust$labels[clust$order]), ], cluster_cols = F, cluster_rows = F,
color = colorRampPalette(c("blue","white","red"))(101),
breaks = seq(-max(abs(mat)),max(abs(mat)),length.out = 100),
show_rownames = F) #, main = "Mean log2 fold-changes from baseline, cohort 1")
#pheatmap(mat[order(mat[,"C1D08"]), ], cluster_cols = F, cluster_rows = F,
pheatmap(t(mat[as.character(clust$labels[clust$order]), ]), cluster_cols = F, cluster_rows = F,
color = colorRampPalette(c("blue","white","red"))(101),
breaks = seq(-max(abs(mat)),max(abs(mat)),length.out = 100),
show_colnames = F, main = "Mean log2 fold-changes from baseline, cohort 1")
pdf("DE heatmaps sideways.pdf", height = 3, width = 6, onefile = F)
#pheatmap(mat[order(mat[,"C1D08"]), ], cluster_cols = F, cluster_rows = F,
pheatmap(t(mat[as.character(clust$labels[clust$order]), ]), cluster_cols = F, cluster_rows = F,
color = colorRampPalette(c("blue","white","red"))(101),
breaks = seq(-max(abs(mat)),max(abs(mat)),length.out = 100),
show_colnames = F, main = "Mean log2 fold-changes from baseline, cohort 1")
dev.off()
pdf("DE heatmaps sideways.pdf", height = 3, width = 6)#, onefile = F)
#pheatmap(mat[order(mat[,"C1D08"]), ], cluster_cols = F, cluster_rows = F,
pheatmap(t(mat[as.character(clust$labels[clust$order]), ]), cluster_cols = F, cluster_rows = F,
color = colorRampPalette(c("blue","white","red"))(101),
breaks = seq(-max(abs(mat)),max(abs(mat)),length.out = 100),
show_colnames = F, main = "Mean log2 fold-changes from baseline, cohort 1")
dev.off()
pdf("DE heatmaps sideways.pdf", height = 3, width = 6)#, onefile = F)
#pheatmap(mat[order(mat[,"C1D08"]), ], cluster_cols = F, cluster_rows = F,
pheatmap(t(mat[as.character(clust$labels[clust$order]), ]), cluster_cols = F, cluster_rows = F,
color = colorRampPalette(c("blue","white","red"))(101),
breaks = seq(-max(abs(mat)),max(abs(mat)),length.out = 100),
show_colnames = F) #, main = "Mean log2 fold-changes from baseline, cohort 1")
dev.off()
cells
names(e2)
meandeltas["DC",]
meandeltas
meandeltas[,"DC"]
2^2.53555
2^-1.5
meandeltas[,"Monocyrtes"]
meandeltas[,"Monocytes"]
2^meandeltas[,"Monocytes"]
